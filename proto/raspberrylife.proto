// =============================================================================
// Optional parameters for java compilation
// =============================================================================

option java_package = "protobuf";
option java_outer_classname = "RblProto";

// =============================================================================
// General RBLMessage
// =============================================================================
message RBLMessage {

	// Range 1 - 20 : Message header
	required string id = 1;
	required MessageType messageType = 2 [default = PLAIN_TEXT];
	required MessageFlag messageFlag = 3;
	optional int32 messageNumber = 4;

	// Range 21 - 30 : Basic messages
	optional PlainText plainText = 21;

	// Range 31 - 50 : Functional messages
	optional RunInstruction runInstruction = 31;
	optional Logic logic = 32;

	// Range 51 - 70 : Data operation messages
	optional GetData getData = 51;
	optional SetData setData = 52;
	optional Data data = 53;


	// =============================================================================
	// Enumerations
	// =============================================================================

	enum MessageFlag{
		REQUEST = 0;
		RESPONSE = 1;
	}

	enum MessageType {
		PLAIN_TEXT = 0;
		RUN_INSTRUCTION = 1;
		GET_DATA = 2;
		SET_DATA = 3;
		DATA = 4;
		LOGIC = 5;

		// All authentication messages use PlainText as message content
		AUTH = 7;
	}

	enum ModuleType{
		MODULE_TEMP = 0;
		MODULE_OUTLET = 1;
	}

	enum ActuatorType {
		SYSTEM = 0;
		CLIENT = 1;
		MODULE = 2;
	}

	enum DataType {
		INTEGER = 0;
		FLOAT = 1;
		STRING = 2;
	}
	// =============================================================================
	// General
	// =============================================================================

	// Plaintext subtype for general purpose
	message PlainText {
		required string text = 1;
	}

	// =============================================================================
	// Instruction subtypes
	// =============================================================================

	message Instruction {
		// Name of the instruction
		required int32 instructionId = 1;
		repeated string stringParameters = 2;
		repeated int32 intParameters = 3;

		// Module
		optional ModuleType moduleType = 20;
		optional int32 moduleId = 21;
	}

	message RunInstruction {
		required Actuator actuator = 1;
		required Instruction instruction = 2;
	}



	// =============================================================================
	// Logic subtypes
	// =============================================================================

	message Logic {
		required string name = 1;
		required Actuator initiator = 2;
		required Actuator receiver = 3;
		required Condition condition = 4;
	}

	message Actuator {
		required ActuatorType actuatorType = 1;
		required int32 actuatorId = 2;
	}

	message Condition {
		required int32 fieldId = 1;
		optional int32 thresholdOver = 2;
		optional int32 thresholdUnder = 3;
		optional bool state = 4;
	}

	// =============================================================================
	// Data subtypes
	// =============================================================================

	message SetData {
		required Actuator actuator = 1;
		required int32 fieldId = 2;
		required Data data = 3;
	}

	message GetData {
		required Actuator actuator = 1;
		required int32 fieldId = 2;
		optional Range range = 3;
	}

	message Range {
		// Leaving this empty will result in a fixed number of results e.g. 50
		optional int32 count = 1;

		// Specify date as follows: "YYYY-MM-DD hh:mm:ss"
		optional string startDateTime = 2;

		// Same as startDateTime
		optional string endDateTime = 3;
	}

	message Data {
		required int32 fieldId = 1;
		required DataType dataType = 2;
		repeated string stringData = 3;
		repeated int32 int32Data = 4;
		repeated float floatData = 5;
	}



	} // Close RBLMessage
